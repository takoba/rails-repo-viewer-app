[
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36404",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36404/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36404/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36404/events",
    "html_url": "https://github.com/rails/rails/pull/36404",
    "id": 452020553,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg0OTkyNzY3",
    "number": 36404,
    "title": "Fix sqlite3 collation parsing when using decimal columns.",
    "user": {
      "login": "mrschuster",
      "id": 20946540,
      "node_id": "MDQ6VXNlcjIwOTQ2NTQw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/20946540?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrschuster",
      "html_url": "https://github.com/mrschuster",
      "followers_url": "https://api.github.com/users/mrschuster/followers",
      "following_url": "https://api.github.com/users/mrschuster/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrschuster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrschuster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrschuster/subscriptions",
      "organizations_url": "https://api.github.com/users/mrschuster/orgs",
      "repos_url": "https://api.github.com/users/mrschuster/repos",
      "events_url": "https://api.github.com/users/mrschuster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrschuster/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-06-04T14:10:43Z",
    "updated_at": "2019-06-04T14:10:46Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/36404",
      "html_url": "https://github.com/rails/rails/pull/36404",
      "diff_url": "https://github.com/rails/rails/pull/36404.diff",
      "patch_url": "https://github.com/rails/rails/pull/36404.patch"
    },
    "body": "If an sqlite3 table contains a decimal column behind columns with a collation\r\ndefinition, then parsing the collation of all preceding columns will fail --\r\nthe collation will be missed without notice.\r\n\r\nThis PR fixes the issue and adds test coverage."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36403",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36403/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36403/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36403/events",
    "html_url": "https://github.com/rails/rails/issues/36403",
    "id": 451944877,
    "node_id": "MDU6SXNzdWU0NTE5NDQ4Nzc=",
    "number": 36403,
    "title": "Reaper does not collect stale connections",
    "user": {
      "login": "aclarembeau",
      "id": 10834626,
      "node_id": "MDQ6VXNlcjEwODM0NjI2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/10834626?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aclarembeau",
      "html_url": "https://github.com/aclarembeau",
      "followers_url": "https://api.github.com/users/aclarembeau/followers",
      "following_url": "https://api.github.com/users/aclarembeau/following{/other_user}",
      "gists_url": "https://api.github.com/users/aclarembeau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aclarembeau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aclarembeau/subscriptions",
      "organizations_url": "https://api.github.com/users/aclarembeau/orgs",
      "repos_url": "https://api.github.com/users/aclarembeau/repos",
      "events_url": "https://api.github.com/users/aclarembeau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aclarembeau/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-06-04T11:34:15Z",
    "updated_at": "2019-06-04T11:34:15Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\nClone the following git directory: \r\nhttps://github.com/aclarembeau/rails-issue\r\nConfigure postgres instance on database.yml \r\nRun: `bundle exec puma -C config/puma.rb`\r\n\r\nThen, execute `ruby benchmark.rb` (this will take a while) \r\nAfter 2 minutes, the script will stop (with an error message). \r\nThen, wait 1 more minute. \r\n\r\nAfterwise, call `curl localhost:3000`\r\n\r\n### Expected behavior\r\nAfter the script finished running, the connection pool is collected by the reaper. \r\nSo, subsequent requests will not fail. \r\n\r\n### Actual behavior\r\nAfter the script finished running, the connection pool is still empty. \r\nSo, all subsequent requests will fail with `Cannot obtain a connection from the pool within 5000sec`\r\n\r\n### System configuration\r\n**Rails version**: 5.2.3\r\n\r\n**Ruby version**: 2.4.2\r\n\r\n### Additional details \r\n\r\nTo reproduce the issue, we created an empty rails project, which consists of a single endpoint: / , that makes long (100 seconds) operation on a Postgres database. \r\nThe server is set up to kill the requests that take more than 15 seconds (using rack timeout). \r\n\r\nThen, we've built a script that continuously queries the server for two minutes. \r\n\r\nAs the requests go, and the timer expires, rack timers are continuously killing the request threads, leaving them in inconsistent states. This creates pending connections that should normally be connected by the Reaper, which is connected to reap every 10 seconds. \r\n\r\nBut, we've constated that after a while, connections still hold, even though all threads have been killed and the reaper ran multiple times. \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36402",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36402/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36402/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36402/events",
    "html_url": "https://github.com/rails/rails/issues/36402",
    "id": 451940956,
    "node_id": "MDU6SXNzdWU0NTE5NDA5NTY=",
    "number": 36402,
    "title": "ActiveRecord::Calculations#count does not work when using custom `select`s",
    "user": {
      "login": "Qqwy",
      "id": 5345745,
      "node_id": "MDQ6VXNlcjUzNDU3NDU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5345745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Qqwy",
      "html_url": "https://github.com/Qqwy",
      "followers_url": "https://api.github.com/users/Qqwy/followers",
      "following_url": "https://api.github.com/users/Qqwy/following{/other_user}",
      "gists_url": "https://api.github.com/users/Qqwy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Qqwy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Qqwy/subscriptions",
      "organizations_url": "https://api.github.com/users/Qqwy/orgs",
      "repos_url": "https://api.github.com/users/Qqwy/repos",
      "events_url": "https://api.github.com/users/Qqwy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Qqwy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-06-04T11:24:28Z",
    "updated_at": "2019-06-04T11:30:37Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\n\r\n1. Have any ActiveRecord model which lives in a Postgres database. (Although the same issue will probably appear when using other SQL databases)\r\n2. Run a statement like the following in e.g. `rails console`: \r\n\r\n```ruby\r\nYourModel.all.select(\"*\", \"42 answer\").count\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nI would expect a reasonable output for `count`.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nActiveRecord constructs and attempts to execute an invalid query, along the lines of:\r\n\r\n```sql\r\n SELECT COUNT(*, 42 answer) FROM \"your_models\"\r\n```\r\n\r\n### System configuration\r\n**Rails version**:\r\n5.2.3\r\n\r\n**Ruby version**:\r\n2.4.2\r\n\r\n\r\n### Known mitigation\r\n\r\nI know it is possible to 'fix' this by e.g. refining or monkeypatching [ActiveRecord::Calculations#select_for_count](https://github.com/rails/rails/blob/70d64169ae03eff911028be80b7f00bbb5784a67/activerecord/lib/active_record/relation/calculations.rb#L402) as follows:\r\n\r\n```ruby\r\n\r\n      # Overrides 'select_for_count' that does not play nicely with complicated SELECT queries.\r\n      def select_for_count\r\n        :all\r\n      end\r\n\r\n```\r\n\r\nhowever, this seems like a bit of a 'hack': `select_for_count` is probably written the way it is for a particular reason (that is not clear to me; there is no documentation and no comments explaining what its assumptions, invariants or inner workings are)."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36401",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36401/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36401/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36401/events",
    "html_url": "https://github.com/rails/rails/issues/36401",
    "id": 451928941,
    "node_id": "MDU6SXNzdWU0NTE5Mjg5NDE=",
    "number": 36401,
    "title": "Marshal.dump raises TypeError on ActiveRecord instance",
    "user": {
      "login": "sundling",
      "id": 3260563,
      "node_id": "MDQ6VXNlcjMyNjA1NjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3260563?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sundling",
      "html_url": "https://github.com/sundling",
      "followers_url": "https://api.github.com/users/sundling/followers",
      "following_url": "https://api.github.com/users/sundling/following{/other_user}",
      "gists_url": "https://api.github.com/users/sundling/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sundling/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sundling/subscriptions",
      "organizations_url": "https://api.github.com/users/sundling/orgs",
      "repos_url": "https://api.github.com/users/sundling/repos",
      "events_url": "https://api.github.com/users/sundling/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sundling/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-06-04T10:54:20Z",
    "updated_at": "2019-06-04T13:16:00Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "It is not possible to call Marshal.dump on an ActiveRecord instance that has been `inspect`ed\r\n\r\nIt seems that the commit https://github.com/rails/rails/commit/32b03b46150b0161eba2321ccac7678511e3d58e introduced the error when `DelegateClass` was added.\r\n\r\nIt worked previously in Rails 5.2.3\r\n\r\n### Steps to reproduce\r\n```\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"activerecord\", \"6.0.0.rc1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.string :title\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_marshal_dump\r\n    post = Post.new(title: \"My post\")\r\n\r\n    assert_equal post.inspect, Marshal.load(Marshal.dump(post)).inspect\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIt should be possible to Marshal.dump the ActiveRecord instance\r\n\r\n### Actual behavior\r\nAn exception is thrown\r\n```\r\nTypeError: can't dump anonymous class #<Class:0x00007fabde6c8e28>\r\n    test.rb:39:in `dump'\r\n    test.rb:39:in `test_marshal_dump'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 6.0.0.rc1\r\n\r\n**Ruby version**: 2.6.3\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36399",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36399/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36399/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36399/events",
    "html_url": "https://github.com/rails/rails/pull/36399",
    "id": 451765615,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg0NzkxMTI0",
    "number": 36399,
    "title": "Name helper_method module and improve source location",
    "user": {
      "login": "jhawthorn",
      "id": 131752,
      "node_id": "MDQ6VXNlcjEzMTc1Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/131752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhawthorn",
      "html_url": "https://github.com/jhawthorn",
      "followers_url": "https://api.github.com/users/jhawthorn/followers",
      "following_url": "https://api.github.com/users/jhawthorn/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhawthorn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhawthorn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhawthorn/subscriptions",
      "organizations_url": "https://api.github.com/users/jhawthorn/orgs",
      "repos_url": "https://api.github.com/users/jhawthorn/repos",
      "events_url": "https://api.github.com/users/jhawthorn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhawthorn/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [
      {
        "id": 107189,
        "node_id": "MDU6TGFiZWwxMDcxODk=",
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-06-04T02:18:13Z",
    "updated_at": "2019-06-04T03:13:31Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/36399",
      "html_url": "https://github.com/rails/rails/pull/36399",
      "diff_url": "https://github.com/rails/rails/pull/36399.diff",
      "patch_url": "https://github.com/rails/rails/pull/36399.patch"
    },
    "body": "This PR aims to improve introspection of helper methods by naming the module which includes them, and by changing their source location to the line where `helper_method` is called. The module is named like `MyController::HelperMethods` (this is somewhat similar to #35595 - giving `GeneratedAttributeMethods` a name in activerecord).\r\n\r\nFor example, from a `binding.pry` in a view, if we were curious where `cookies` was defined ...\r\n\r\n**Before**\r\n\r\n```\r\npry> $ cookies\r\n\r\nFrom: /Users/jhawthorn/src/rails/actionpack/lib/abstract_controller/helpers.rb @ line 66:\r\nOwner: #<Module:0x00007f979aa93c40>\r\nVisibility: public\r\nNumber of lines: 3\r\n\r\ndef #{meth}(*args, &blk)                               # def current_user(*args, &blk)\r\n  controller.send(%(#{meth}), *args, &blk)             #   controller.send(:current_user, *args, &blk)\r\nend                                                    # end\r\n```\r\n\r\n... we don't learn a lot from this\r\n\r\n**After**\r\n\r\n```\r\npry> $ cookies\r\n\r\nFrom: /Users/jhawthorn/src/rails/actionpack/lib/action_controller/metal/cookies.rb @ line 8:\r\nOwner: ActionController::Base::HelperMethods\r\nVisibility: public\r\nNumber of lines: 1\r\n\r\nhelper_method :cookies if defined?(helper_method)\r\n```\r\n\r\n... Oh! We can see where it's defined, and can tell that it's on `ActionController::Base`"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36396",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36396/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36396/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36396/events",
    "html_url": "https://github.com/rails/rails/issues/36396",
    "id": 451693475,
    "node_id": "MDU6SXNzdWU0NTE2OTM0NzU=",
    "number": 36396,
    "title": "Preloading associations into multiple in-memory copies of the same record causes duplicates",
    "user": {
      "login": "pstare",
      "id": 1154940,
      "node_id": "MDQ6VXNlcjExNTQ5NDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1154940?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstare",
      "html_url": "https://github.com/pstare",
      "followers_url": "https://api.github.com/users/pstare/followers",
      "following_url": "https://api.github.com/users/pstare/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstare/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstare/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstare/subscriptions",
      "organizations_url": "https://api.github.com/users/pstare/orgs",
      "repos_url": "https://api.github.com/users/pstare/repos",
      "events_url": "https://api.github.com/users/pstare/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstare/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 107186,
        "node_id": "MDU6TGFiZWwxMDcxODY=",
        "url": "https://api.github.com/repos/rails/rails/labels/regression",
        "name": "regression",
        "color": "e10c02",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/rails/rails/milestones/63",
      "html_url": "https://github.com/rails/rails/milestone/63",
      "labels_url": "https://api.github.com/repos/rails/rails/milestones/63/labels",
      "id": 2828826,
      "node_id": "MDk6TWlsZXN0b25lMjgyODgyNg==",
      "number": 63,
      "title": "6.0.0",
      "description": "",
      "creator": {
        "login": "rafaelfranca",
        "id": 47848,
        "node_id": "MDQ6VXNlcjQ3ODQ4",
        "avatar_url": "https://avatars3.githubusercontent.com/u/47848?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 13,
      "closed_issues": 145,
      "state": "open",
      "created_at": "2017-10-10T22:08:21Z",
      "updated_at": "2019-06-04T14:46:18Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 0,
    "created_at": "2019-06-03T21:16:44Z",
    "updated_at": "2019-06-04T14:43:49Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\n\r\n`::ActiveRecord::Associations::Preloader#preload` takes both `records` and `associations` as arguments. When preloading an association into multiple in-memory representations of the same underlying record (i.e. same `.id`, different `.object_id`), duplicates are created in the associations of both copies.\r\n\r\nThis gist is a runnable Ruby script that will result in 4 failures when used with Rails 6.0. The test failure output and test descriptions indicate the divergence in expected and actual behaviour:\r\n\r\nhttps://gist.github.com/pstare/98674b05af5b70c45eea50d141462578\r\n\r\nThe issue seems to have been introduced between Rails 5.2 and 6.0, specifically in rails/rails#35496.\r\n\r\n### Expected behavior\r\n\r\n```ruby\r\npost = Post.create!\r\ncomment = Comment.create!\r\npost.comments << comment\r\npost.save\r\n\r\npost_object_1 = Post.find(1)\r\npost_object_2 = Post.find(1)\r\n\r\n::ActiveRecord::Associations::Preloader.new.preload([post_object_1, post_object_2], :comments)\r\n\r\npost_object_1.comments  # expected: [<Comment(id: 1)>]\r\npost_object_2.comments  # expected: [<Comment(id: 1)>]\r\n```\r\n\r\n### Actual behavior\r\n\r\n```ruby\r\npost_object_1.comments  # actual: [<Comment(id: 1)>, <Comment(id: 1)>]\r\npost_object_2.comments  # actual: [<Comment(id: 1)>, <Comment(id: 1)>]\r\n```\r\n\r\n### System configuration\r\n**Rails version**:\r\n6.0.0.rc1\r\n\r\n**Ruby version**:\r\n2.6.2p47 \r\n\r\n\r\n@bogdan @kamipo "
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36394",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36394/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36394/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36394/events",
    "html_url": "https://github.com/rails/rails/pull/36394",
    "id": 451665248,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg0NzEwOTEw",
    "number": 36394,
    "title": "Treat ActiveRecord::Base and ApplicationRecord as \"primary\"",
    "user": {
      "login": "eileencodes",
      "id": 1080678,
      "node_id": "MDQ6VXNlcjEwODA2Nzg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1080678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eileencodes",
      "html_url": "https://github.com/eileencodes",
      "followers_url": "https://api.github.com/users/eileencodes/followers",
      "following_url": "https://api.github.com/users/eileencodes/following{/other_user}",
      "gists_url": "https://api.github.com/users/eileencodes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eileencodes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eileencodes/subscriptions",
      "organizations_url": "https://api.github.com/users/eileencodes/orgs",
      "repos_url": "https://api.github.com/users/eileencodes/repos",
      "events_url": "https://api.github.com/users/eileencodes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eileencodes/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/rails/rails/milestones/63",
      "html_url": "https://github.com/rails/rails/milestone/63",
      "labels_url": "https://api.github.com/repos/rails/rails/milestones/63/labels",
      "id": 2828826,
      "node_id": "MDk6TWlsZXN0b25lMjgyODgyNg==",
      "number": 63,
      "title": "6.0.0",
      "description": "",
      "creator": {
        "login": "rafaelfranca",
        "id": 47848,
        "node_id": "MDQ6VXNlcjQ3ODQ4",
        "avatar_url": "https://avatars3.githubusercontent.com/u/47848?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 13,
      "closed_issues": 145,
      "state": "open",
      "created_at": "2017-10-10T22:08:21Z",
      "updated_at": "2019-06-04T14:46:18Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 2,
    "created_at": "2019-06-03T20:06:05Z",
    "updated_at": "2019-06-03T20:28:04Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/36394",
      "html_url": "https://github.com/rails/rails/pull/36394",
      "diff_url": "https://github.com/rails/rails/pull/36394.diff",
      "patch_url": "https://github.com/rails/rails/pull/36394.patch"
    },
    "body": "When someone has a multi-db application their `ApplicationRecord` will\r\nlook like:\r\n\r\n```ruby\r\nclass ApplicationRecord < ActiveRecord::Base\r\n  self.abstract_class = true\r\n\r\n  connects_to database: { writing: :primary, reading: :replica }\r\nend\r\n```\r\n\r\nThis will cause us to open 2 connections to ActiveRecord::Base's\r\ndatabase when we actually only want 1. This is because Rails sees\r\n`ApplicationRecord` and thinks it's a new connection, not the existing\r\n`ActiveRecord::Base` connection because the\r\n`connection_specification_name` is different.\r\n\r\nThis PR changes `ApplicationRecord` classes to consider themselves the\r\nsame as the \"primary\" connection.\r\n\r\nFixes #36382\r\n\r\nNote: this needs a backport to 6-0-stable\r\n\r\ncc/ @tenderlove @jhawthorn @rafaelfranca @matthewd @morgoth "
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36393",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36393/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36393/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36393/events",
    "html_url": "https://github.com/rails/rails/issues/36393",
    "id": 451593386,
    "node_id": "MDU6SXNzdWU0NTE1OTMzODY=",
    "number": 36393,
    "title": "rails db:fixtures:load doesn't play nicely with ActiveRecord::FixtureSet.context_class",
    "user": {
      "login": "Medvezo",
      "id": 43094025,
      "node_id": "MDQ6VXNlcjQzMDk0MDI1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/43094025?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Medvezo",
      "html_url": "https://github.com/Medvezo",
      "followers_url": "https://api.github.com/users/Medvezo/followers",
      "following_url": "https://api.github.com/users/Medvezo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Medvezo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Medvezo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Medvezo/subscriptions",
      "organizations_url": "https://api.github.com/users/Medvezo/orgs",
      "repos_url": "https://api.github.com/users/Medvezo/repos",
      "events_url": "https://api.github.com/users/Medvezo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Medvezo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-06-03T17:08:41Z",
    "updated_at": "2019-06-03T17:14:57Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\nMost of what I will describe is written up in the [following tutorial](https://brandonhilkert.com/blog/managing-login-passwords-for-capybara-with-minitest-and-rails-fixtures/ ).\r\n\r\n**TL;DR:** Trying to make helper methods available in fixtures in order to avoid duplication. The way to accomplish that is to use` ActiveRecord::FixtureSet.context_class.include` method [described here](https://edgeapi.rubyonrails.org/classes/ActiveRecord/FixtureSet.html#class-ActiveRecord::FixtureSet-label-Dynamic+fixtures+with+ERB).\r\n\r\nHelper methods we are trying to call inside the fixture:\r\n```\r\nmodule AuthenticationHelper\r\n  def default_password\r\n    'notarealpassword'\r\n  end\r\n\r\n  def default_password_digest\r\n    BCrypt::Password.create(default_password, cost: 4)\r\n  end\r\nend\r\n```\r\n\r\nSample `users.yml` fixture:\r\n```\r\ntest:\r\n  email: test@example.com\r\n  password_digest: <%= default_password_digest %>\r\n```\r\n\r\nIncluding helper methods inside `tests/test_helper.rb`:\r\n```\r\nclass ActiveSupport::TestCase\r\n  ...\r\n  include Support::AuthenticationHelper\r\nend\r\n```\r\n\r\n\r\nWorks great until I decided to run `rails db:fixtures:load`.\r\n\r\n### Expected behavior\r\n`rails db:fixtures:load` shouldn't throw `NameError` and `default_password_digest` function should be called, since it worked fine in other tests.\r\n\r\n### Actual behavior\r\nRun the following command: `rails db:fixtures:load --trace`\r\n```\r\n** Invoke db:fixtures:load (first_time)\r\n** Invoke db:load_config (first_time)\r\n** Invoke environment (first_time)\r\n** Execute environment\r\n** Execute db:load_config\r\n** Execute db:fixtures:load\r\nrails aborted!\r\nNameError: undefined local variable or method `default_password_digest' for #<#<Class:0x000055bd8d099368>:0x000055bd8d099048>\r\ntest/fixtures/users.yml:3:in `get_binding'\r\nlib/ruby/2.6.0/erb.rb:901:in `eval'\r\nlib/ruby/2.6.0/erb.rb:901:in `result'\r\nlib/ruby/gems/2.6.0/gems/activerecord-6.0.0.rc1/lib/active_record/fixture_set/file.rb:65:in `render'\r\nlib/ruby/gems/2.6.0/gems/activerecord-6.0.0.rc1/lib/active_record/fixture_set/file.rb:50:in `raw_rows'\r\nlib/ruby/gems/2.6.0/gems/activerecord-6.0.0.rc1/lib/active_record/fixture_set/file.rb:39:in `config_row'\r\nlib/ruby/gems/2.6.0/gems/activerecord-6.0.0.rc1/lib/active_record/fixture_set/file.rb:29:in `model_class'\r\nlib/ruby/gems/2.6.0/gems/activerecord-6.0.0.rc1/lib/active_record/fixtures.rb:683:in `block (2 levels) in read_fixture_files'\r\nlib/ruby/gems/2.6.0/gems/activerecord-6.0.0.rc1/lib/active_record/fixture_set/file.rb:17:in `open'\r\nlib/ruby/gems/2.6.0/gems/activerecord-6.0.0.rc1/lib/active_record/fixtures.rb:682:in `block in read_fixture_files'\r\nlib/ruby/gems/2.6.0/gems/activerecord-6.0.0.rc1/lib/active_record/fixtures.rb:681:in `each'\r\nlib/ruby/gems/2.6.0/gems/activerecord-6.0.0.rc1/lib/active_record/fixtures.rb:681:in `each_with_object'\r\nlib/ruby/gems/2.6.0/gems/activerecord-6.0.0.rc1/lib/active_record/fixtures.rb:681:in `read_fixture_files'\r\nlib/ruby/gems/2.6.0/gems/activerecord-6.0.0.rc1/lib/active_record/fixtures.rb:628:in `initialize'\r\nlib/ruby/gems/2.6.0/gems/activerecord-6.0.0.rc1/lib/active_record/fixtures.rb:578:in `new'\r\nlib/ruby/gems/2.6.0/gems/activerecord-6.0.0.rc1/lib/active_record/fixtures.rb:578:in `block in read_and_insert'\r\nlib/ruby/gems/2.6.0/gems/activerecord-6.0.0.rc1/lib/active_record/fixtures.rb:576:in `map'\r\nlib/ruby/gems/2.6.0/gems/activerecord-6.0.0.rc1/lib/active_record/fixtures.rb:576:in `read_and_insert'\r\nlib/ruby/gems/2.6.0/gems/activerecord-6.0.0.rc1/lib/active_record/fixtures.rb:546:in `create_fixtures'\r\nlib/ruby/gems/2.6.0/gems/activerecord-6.0.0.rc1/lib/active_record/railties/databases.rake:308:in `block (3 levels) in <main>'\r\nlib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273:in `block in execute'\r\nlib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273:in `each'\r\nlib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273:in `execute'\r\nlib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:214:in `block in invoke_with_call_chain'\r\nlib/ruby/2.6.0/monitor.rb:230:in `mon_synchronize'\r\nlib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:194:in `invoke_with_call_chain'\r\nlib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:183:in `invoke'\r\nlib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/application.rb:160:in `invoke_task'\r\nlib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/application.rb:116:in `block (2 levels) in top_level'\r\nlib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/application.rb:116:in `each'\r\nlib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/application.rb:116:in `block in top_level'\r\nlib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/application.rb:125:in `run_with_threads'\r\nlib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/application.rb:110:in `top_level'\r\nlib/ruby/gems/2.6.0/gems/railties-6.0.0.rc1/lib/rails/commands/rake/rake_command.rb:23:in `block in perform'\r\nlib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/application.rb:186:in `standard_exception_handling'\r\nlib/ruby/gems/2.6.0/gems/railties-6.0.0.rc1/lib/rails/commands/rake/rake_command.rb:20:in `perform'\r\nlib/ruby/gems/2.6.0/gems/railties-6.0.0.rc1/lib/rails/command.rb:48:in `invoke'\r\nlib/ruby/gems/2.6.0/gems/railties-6.0.0.rc1/lib/rails/commands.rb:18:in `<main>'\r\nlib/ruby/gems/2.6.0/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:22:in `require'\r\nlib/ruby/gems/2.6.0/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:22:in `block in require_with_bootsnap_lfi'\r\nlib/ruby/gems/2.6.0/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/loaded_features_index.rb:92:in `register'\r\nlib/ruby/gems/2.6.0/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:21:in `require_with_bootsnap_lfi'\r\nlib/ruby/gems/2.6.0/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `require'\r\nlib/ruby/gems/2.6.0/gems/activesupport-6.0.0.rc1/lib/active_support/dependencies.rb:302:in `block in require'\r\nlib/ruby/gems/2.6.0/gems/activesupport-6.0.0.rc1/lib/active_support/dependencies.rb:268:in `load_dependency'\r\nlib/ruby/gems/2.6.0/gems/activesupport-6.0.0.rc1/lib/active_support/dependencies.rb:302:in `require'\r\nbin/rails:9:in `<top (required)>'\r\nlib/ruby/gems/2.6.0/gems/spring-2.0.2/lib/spring/client/rails.rb:28:in `load'\r\nlib/ruby/gems/2.6.0/gems/spring-2.0.2/lib/spring/client/rails.rb:28:in `call'\r\nlib/ruby/gems/2.6.0/gems/spring-2.0.2/lib/spring/client/command.rb:7:in `call'\r\nlib/ruby/gems/2.6.0/gems/spring-2.0.2/lib/spring/client.rb:30:in `run'\r\nlib/ruby/gems/2.6.0/gems/spring-2.0.2/bin/spring:49:in `<top (required)>'\r\nlib/ruby/gems/2.6.0/gems/spring-2.0.2/lib/spring/binstub.rb:31:in `load'\r\nlib/ruby/gems/2.6.0/gems/spring-2.0.2/lib/spring/binstub.rb:31:in `<top (required)>'\r\nlib/ruby/2.6.0/rubygems/core_ext/kernel_require.rb:65:in `require'\r\nlib/ruby/2.6.0/rubygems/core_ext/kernel_require.rb:65:in `require'\r\nbin/spring:15:in `<top (required)>'\r\nbin/rails:3:in `load'\r\nbin/rails:3:in `<main>'\r\nTasks: TOP => db:fixtures:load\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: 6.0.0rc1\r\n\r\n**Ruby version**: 2.6.3\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36392",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36392/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36392/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36392/events",
    "html_url": "https://github.com/rails/rails/issues/36392",
    "id": 451591546,
    "node_id": "MDU6SXNzdWU0NTE1OTE1NDY=",
    "number": 36392,
    "title": "ActiveStorage::Blob: analyzed metadata is missing width/height",
    "user": {
      "login": "michaelnwani",
      "id": 1715524,
      "node_id": "MDQ6VXNlcjE3MTU1MjQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1715524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelnwani",
      "html_url": "https://github.com/michaelnwani",
      "followers_url": "https://api.github.com/users/michaelnwani/followers",
      "following_url": "https://api.github.com/users/michaelnwani/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelnwani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelnwani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelnwani/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelnwani/orgs",
      "repos_url": "https://api.github.com/users/michaelnwani/repos",
      "events_url": "https://api.github.com/users/michaelnwani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelnwani/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-06-03T17:03:35Z",
    "updated_at": "2019-06-03T17:08:03Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hello,\r\n\r\n### Steps to reproduce\r\nCreate a model with an Active Storage (S3) image attachment (a .png in my case). Using the default `active_storage_analysis`\r\n\r\n### Expected behavior\r\nSince all I did was call the `analyze` method (which I assume is what's being called the first time around when an attachment is made), I expect it to originally have the width/height attributes.\r\n\r\n### Actual behavior\r\nThe Blob metadata is missing its width/height attributes:\r\n```\r\n#<ActiveStorage::Blob:0x00007fb934129130\r\n id: \"d6d6922a-646f-446f-8656-b1301ca5ba59\",\r\n key: \"dm46dnva9crgu9k1r9y4bwmhz3oi\",\r\n filename: \"Cheddah_icon-60@3x.png\",\r\n content_type: \"image/png\",\r\n metadata: {\"identified\"=>true, \"analyzed\"=>true},\r\n byte_size: 3559,\r\n checksum: \"x+EHSQeB6l3Kvb+8SCMzxg==\",\r\n created_at: Mon, 03 Jun 2019 14:56:13 UTC +00:00>\r\n```\r\n\r\nI then manually analyze the Blob by invoking the `analyze` method on it. It now has the width/height:\r\n\r\n```\r\n#<ActiveStorage::Blob:0x00007fb934129130\r\n id: \"d6d6922a-646f-446f-8656-b1301ca5ba59\",\r\n key: \"dm46dnva9crgu9k1r9y4bwmhz3oi\",\r\n filename: \"Cheddah_icon-60@3x.png\",\r\n content_type: \"image/png\",\r\n metadata: {\"identified\"=>true, \"analyzed\"=>true, \"width\"=>180, \"height\"=>180},\r\n byte_size: 3559,\r\n checksum: \"x+EHSQeB6l3Kvb+8SCMzxg==\",\r\n created_at: Mon, 03 Jun 2019 14:56:13 UTC +00:00>\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 6.0.0.rc1\r\n\r\n**Ruby version**: 2.6.2p47 (2019-03-13 revision 67232)\r\n\r\n### Extra info\r\n- I'm using Sidekiq `v5.2.7`\r\n- (not sure if relevant) my Variant Processor is VIPS:\r\n```\r\nimage_processing (1.9.0)\r\n      mini_magick (>= 4.9.3, < 5)\r\n      ruby-vips (>= 2.0.13, < 3)\r\n```\r\n\r\n\r\nI'm aware that I can just create background jobs to do this every time the model is saved, but... I just want to understand this intermittent behavior. Thank you for your help\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36391",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36391/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36391/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36391/events",
    "html_url": "https://github.com/rails/rails/issues/36391",
    "id": 451585902,
    "node_id": "MDU6SXNzdWU0NTE1ODU5MDI=",
    "number": 36391,
    "title": "Autoloading guides revamp",
    "user": {
      "login": "fxn",
      "id": 3387,
      "node_id": "MDQ6VXNlcjMzODc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3387?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fxn",
      "html_url": "https://github.com/fxn",
      "followers_url": "https://api.github.com/users/fxn/followers",
      "following_url": "https://api.github.com/users/fxn/following{/other_user}",
      "gists_url": "https://api.github.com/users/fxn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fxn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fxn/subscriptions",
      "organizations_url": "https://api.github.com/users/fxn/orgs",
      "repos_url": "https://api.github.com/users/fxn/repos",
      "events_url": "https://api.github.com/users/fxn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fxn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 150377,
        "node_id": "MDU6TGFiZWwxNTAzNzc=",
        "url": "https://api.github.com/repos/rails/rails/labels/docs",
        "name": "docs",
        "color": "02d7e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "fxn",
      "id": 3387,
      "node_id": "MDQ6VXNlcjMzODc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3387?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fxn",
      "html_url": "https://github.com/fxn",
      "followers_url": "https://api.github.com/users/fxn/followers",
      "following_url": "https://api.github.com/users/fxn/following{/other_user}",
      "gists_url": "https://api.github.com/users/fxn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fxn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fxn/subscriptions",
      "organizations_url": "https://api.github.com/users/fxn/orgs",
      "repos_url": "https://api.github.com/users/fxn/repos",
      "events_url": "https://api.github.com/users/fxn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fxn/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "fxn",
        "id": 3387,
        "node_id": "MDQ6VXNlcjMzODc=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/3387?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fxn",
        "html_url": "https://github.com/fxn",
        "followers_url": "https://api.github.com/users/fxn/followers",
        "following_url": "https://api.github.com/users/fxn/following{/other_user}",
        "gists_url": "https://api.github.com/users/fxn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fxn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fxn/subscriptions",
        "organizations_url": "https://api.github.com/users/fxn/orgs",
        "repos_url": "https://api.github.com/users/fxn/repos",
        "events_url": "https://api.github.com/users/fxn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fxn/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/rails/rails/milestones/63",
      "html_url": "https://github.com/rails/rails/milestone/63",
      "labels_url": "https://api.github.com/repos/rails/rails/milestones/63/labels",
      "id": 2828826,
      "node_id": "MDk6TWlsZXN0b25lMjgyODgyNg==",
      "number": 63,
      "title": "6.0.0",
      "description": "",
      "creator": {
        "login": "rafaelfranca",
        "id": 47848,
        "node_id": "MDQ6VXNlcjQ3ODQ4",
        "avatar_url": "https://avatars3.githubusercontent.com/u/47848?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 13,
      "closed_issues": 145,
      "state": "open",
      "created_at": "2017-10-10T22:08:21Z",
      "updated_at": "2019-06-04T14:46:18Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 0,
    "created_at": "2019-06-03T16:49:57Z",
    "updated_at": "2019-06-03T16:51:11Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "_Issue created to have this documentation included in the milestone._\r\n\r\nWe need a new guide for `:zeitwerk` mode, and tweaks to the previous one covering `:classic` mode."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36390",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36390/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36390/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36390/events",
    "html_url": "https://github.com/rails/rails/issues/36390",
    "id": 451553819,
    "node_id": "MDU6SXNzdWU0NTE1NTM4MTk=",
    "number": 36390,
    "title": "ActiveRecord -> DynamicMatchers -> method_missing call stack not provided",
    "user": {
      "login": "howa",
      "id": 1767075,
      "node_id": "MDQ6VXNlcjE3NjcwNzU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1767075?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/howa",
      "html_url": "https://github.com/howa",
      "followers_url": "https://api.github.com/users/howa/followers",
      "following_url": "https://api.github.com/users/howa/following{/other_user}",
      "gists_url": "https://api.github.com/users/howa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/howa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/howa/subscriptions",
      "organizations_url": "https://api.github.com/users/howa/orgs",
      "repos_url": "https://api.github.com/users/howa/repos",
      "events_url": "https://api.github.com/users/howa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/howa/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-06-03T15:39:43Z",
    "updated_at": "2019-06-03T15:39:43Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "fix:\r\n\r\nmodule ActiveRecord\r\n  module DynamicMatchers #:nodoc:\r\n    private\r\n\r\n    def method_missing(name, *arguments, &block)\r\n      match = Method.match(self, name)\r\n\r\n      if match && match.valid?\r\n        match.define\r\n        send(name, *arguments, &block)\r\n      else\r\n        ap caller\r\n        super\r\n      end\r\n    end\r\n  end\r\nend\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36388",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36388/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36388/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36388/events",
    "html_url": "https://github.com/rails/rails/pull/36388",
    "id": 451509136,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg0NTg1MTI5",
    "number": 36388,
    "title": "Introduce ActionView::Component",
    "user": {
      "login": "joelhawksley",
      "id": 1940294,
      "node_id": "MDQ6VXNlcjE5NDAyOTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1940294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joelhawksley",
      "html_url": "https://github.com/joelhawksley",
      "followers_url": "https://api.github.com/users/joelhawksley/followers",
      "following_url": "https://api.github.com/users/joelhawksley/following{/other_user}",
      "gists_url": "https://api.github.com/users/joelhawksley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joelhawksley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joelhawksley/subscriptions",
      "organizations_url": "https://api.github.com/users/joelhawksley/orgs",
      "repos_url": "https://api.github.com/users/joelhawksley/repos",
      "events_url": "https://api.github.com/users/joelhawksley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joelhawksley/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [
      {
        "id": 3666649,
        "node_id": "MDU6TGFiZWwzNjY2NjQ5",
        "url": "https://api.github.com/repos/rails/rails/labels/actionview",
        "name": "actionview",
        "color": "d7e102",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-06-03T14:16:28Z",
    "updated_at": "2019-06-04T16:22:26Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/36388",
      "html_url": "https://github.com/rails/rails/pull/36388",
      "diff_url": "https://github.com/rails/rails/pull/36388.diff",
      "patch_url": "https://github.com/rails/rails/pull/36388.patch"
    },
    "body": "# Introduce ActionView::Component\r\n\r\n`ActionView::Component` provides a framework for building view components.\r\n\r\nWe’ve been running a variant of this patch in production at GitHub since March, and now have about a dozen components used in over a hundred call sites.\r\n\r\n[I spoke about `ActionView::Component` at RailsConf](https://www.youtube.com/watch?v=y5Z5a6QdA-M), where we got lots of great feedback from the community. Several folks asked us to upstream it into Rails.\r\n\r\n## Why\r\n\r\nIn working on views in our Rails monolith at GitHub (which has over 3700 templates), we have run into several key pain points:\r\n\r\n### Testing\r\n\r\nCurrently, Rails encourages testing views via integration or system tests. This disincentivizes us from testing our views thoroughly, due to the costly overhead of exercising the routing/controller layer, instead of just the view. It also often leads to partials being tested for each view they are included in, cheapening the benefit of DRYing up our views.\r\n\r\n### Code Coverage\r\n\r\nMany common Ruby code coverage tools cannot properly handle coverage of views, making it difficult to audit how thorough our tests are and leading to gaps in our test suite.\r\n\r\n### Data Flow\r\n\r\nUnlike a method declaration on an object, views do not declare the values they are expected to receive, making it hard to figure out what context is necessary to render them. This often leads to subtle bugs when we reuse a view across different contexts.\r\n\r\n### Standards\r\n\r\nOur views often fail even the most basic standards of code quality we expect out of our Ruby classes: long methods, deep conditional nesting, and mystery guests abound.\r\n\r\n## ActionView::Component\r\n\r\n`ActionView::Component` is an effort to address these pain points in a way that improves the Rails view layer.\r\n\r\n### Building Components\r\n\r\nComponents are subclasses of `ActionView::Component` and live in `app/components`.\r\n\r\nComponents implement a `.template` class method with a HEREDOC containing ERB, and an optional initializer. All other methods should be private.\r\n\r\nComponents support ActiveModel validations. Components are validated after initialization, but before rendering.\r\n\r\n### Example\r\n\r\nGiven the component `app/components/test_component.rb`: \r\n\r\n```ruby\r\nclass TestComponent < ActionView::Component\r\n  validates :content, :title, presence: true\r\n\r\n  def initialize(title:)\r\n    @title = title\r\n  end\r\n\r\n  def self.template\r\n    <<~'erb'\r\n    <span title=\"<%= title %>\"><%= content %></span>\r\n    erb\r\n  end\r\n\r\n  private\r\n\r\n  attr_reader :title\r\nend\r\n```\r\n\r\nWe can render it in a view as:\r\n\r\n```erb\r\n<%= render(TestComponent, title: \"my title\" ) do %>\r\n  Hello, World!\r\n<% end %>\r\n```\r\n\r\nWhich returns:\r\n\r\n```html\r\n<span title=\"my title\">Hello, World!</span>\r\n```\r\n\r\n### Error case\r\n\r\nIf the component is rendered with a blank title:\r\n\r\n```erb\r\n<%= render(TestComponent, title: \"\") do %>\r\n  Hello, World!\r\n<% end %>\r\n```\r\n\r\nAn error will be raised:\r\n\r\n`ActiveModel::ValidationError: Validation failed: Title can't be blank`\r\n\r\n## Testing\r\n\r\nComponents are unit tested directly. The `render_component` test helper renders a component and wraps the result in `Nokogiri.HTML`, allowing us to test the component above as:\r\n\r\n```ruby\r\ndef test_render_component\r\n  assert_equal(\r\n    %(<span title=\"my title\">Hello, World!</span>),\r\n    render_component(TestComponent, title: \"my title\" ) { \"Hello, World!\" }.css(\"span\").to_html\r\n  )\r\nend\r\n```\r\n\r\nIn general, we’ve found it makes the most sense to test components based on their rendered HTML, as their only public instance method is `html`.\r\n\r\n## Benefits\r\n\r\n### Testing\r\n\r\n`ActionView::Component` allows views to be unit-tested. Our unit tests run in around 25ms/test, vs. ~6s/test for integration tests.\r\n\r\n### Code Coverage\r\n\r\n`ActionView::Component` is at least partially compatible with code coverage tools. We’ve seen some success with SimpleCov.\r\n\r\n### Data flow\r\n\r\nBy clearly defining the context necessary to render a component, we’ve found them to be easier to reuse than partials.\r\n\r\n### Performance\r\n\r\nIn early benchmarks, we’ve seen performance improvements over the existing rendering pipeline. For a test page with nested renders 10 levels deep, we’re seeing around a 5x increase in speed over partials: \r\n\r\n```\r\nComparison:\r\n           component:     6515.4 i/s\r\n             partial:     1251.2 i/s - 5.21x  slower\r\n```\r\n\r\n_Rails 6.1.0.alpha, [joelhawksley/actionview-component-demo](https://github.com/joelhawksley/actionview-component-demo), /benchmark route, via `RAILS_ENV=production rails s`, measured with [evanphx/benchmark-ips](https://github.com/evanphx/benchmark-ips)_\r\n\r\n## Open Questions\r\n\r\n### API\r\n\r\nWe’ve been pretty happy with what we have so far. \r\n\r\n@cgriego and others have [suggested that we consider using a hash key](https://github.com/joelhawksley/actionview-component-demo/issues/6) (like `render(component: TestComponent)`), but in practice this has felt overly verbose, especially in cases where we might be rendering combinations of dozens of components.\r\n\r\n@zachahn and others have [suggested we pass an instantiated component to #render](https://github.com/joelhawksley/rails/pull/1#issuecomment-497705278) which feels a little more Ruby-like, but a little less Railsy to me. \r\n\r\n### Rails integration\r\n\r\nWe’re not sure if the current integration point in Rails (`ActionView::RenderingHelper#render`) is the best option. \r\n\r\n### Naming\r\n\r\nTraditionally, Rails views have been named according to the controller actions that render them. With `ActionView::Component`, things aren’t so simple.\r\n\r\nWe’ve seen good results mimicking the levels of abstraction[ Dan Abramov calls Presentational and Container Components](https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0). Presentational components worry about how things _look_, and Container components worry about how things _work_.\r\n\r\nFor Presentational components, we’ve been naming them according to the UI element they represent (`Tag`, `Badge`, etc).\r\n\r\nFor Container components, we’ve been namespacing them within the domain concept they represent (`Languages`, `Topics`, `PullRequests`) and naming them according to the Presentational component they build (`Tag`, `Badge`, etc).\r\n\r\n### Template architecture\r\n\r\nHaving the ERB template inside a Ruby file doesn’t feel quite right. \r\n\r\nNot all editors like highlighting HEREDOCs. Perhaps we could allow a sidecar template file instead? (i.e. `component.html.erb` sitting alongside `component.rb`)\r\n\r\n[@skyksandr mentioned that Sinatra does inline templates at the bottom of the file](https://github.com/joelhawksley/actionview-component-demo/issues/4).\r\n\r\nCurrently, we use HEREDOCs with string interpolation disabled. This doesn’t feel super user-friendly, and weird errors arise in certain situations if string interpolation is enabled.\r\n\r\n### Templating engine support\r\n\r\nWe should probably support arbitrary templating engines like normal Rails views. \r\n\r\n### Use of ActiveModel::Validations\r\n\r\nAs @dhh pointed out when we discussed this at RailsConf, we’re using `ActiveModel::Validations` in a non-user-facing manner, something not traditionally done.\r\n\r\n### Component previews\r\n\r\n@xdmx and others [have suggested](https://github.com/joelhawksley/actionview-component-demo/issues/5#issue-449109350) we consider something akin to `ActionMailer::Preview` to render components individually.\r\n\r\n### (Not) Calling `super` in `initialize`\r\n\r\nWe are not calling `super` in our component's `initialize` methods as the current `ActionView::Base` initializer is built for view files. This awkward inheritance is a symptom of `ActionView::Component` being a subset of the functionality in `ActionView::Base`. @tenderlove believes we should eventually flip the inheritance structure so that `ActionView::Base` contains only what is need for _both_ regular views and components.\r\n\r\n### Support for other Rails niceties \r\n\r\nWe’d probably want to support url helpers, generators, locales, request formats, and other existing Rails view layer features. Right now helpers must be explicitly included before they can be used in a component.\r\n\r\n## Existing implementations\r\n\r\n`ActionView::Component` is far from a novel idea. Popular implementations of view components in Ruby include, but are not limited to:\r\n\r\n- [trailblazer/cells](https://github.com/trailblazer/cells)\r\n- [dry-rb/dry-view](https://github.com/dry-rb/dry-view)\r\n- [komposable/komponent](https://github.com/komposable/komponent)\r\n- [activeadmin/arbre](https://github.com/activeadmin/arbre)\r\n\r\n## In action\r\n\r\nI’ve created a [demo repository](https://github.com/joelhawksley/actionview-component-demo) pointing to this branch.\r\n\r\n## Co-authored-by\r\n\r\nA cross-functional working group of engineers and members of our Design Systems team collaborated on this work, including by not limited to: @natashau, @tenderlove, @shawnbot, @emplums, @broccolini, @jhawthorn, @myobie, and @zawaideh.\r\n\r\nAdditionally, numerous members of the community have shared their ideas for `ActionView::Component`, including but not limited to: @cgriego, @xdmx, @skyksandr, @jcoyne, @dylanahsmith, @kennyadsl, @cquinones100, @erikaxel, @zachahn, and @trcarden."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36387",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36387/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36387/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36387/events",
    "html_url": "https://github.com/rails/rails/pull/36387",
    "id": 451499029,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg0NTc2OTQ3",
    "number": 36387,
    "title": "Only load test railtie in test environment",
    "user": {
      "login": "kddeisz",
      "id": 5093358,
      "node_id": "MDQ6VXNlcjUwOTMzNTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5093358?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kddeisz",
      "html_url": "https://github.com/kddeisz",
      "followers_url": "https://api.github.com/users/kddeisz/followers",
      "following_url": "https://api.github.com/users/kddeisz/following{/other_user}",
      "gists_url": "https://api.github.com/users/kddeisz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kddeisz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kddeisz/subscriptions",
      "organizations_url": "https://api.github.com/users/kddeisz/orgs",
      "repos_url": "https://api.github.com/users/kddeisz/repos",
      "events_url": "https://api.github.com/users/kddeisz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kddeisz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107195,
        "node_id": "MDU6TGFiZWwxMDcxOTU=",
        "url": "https://api.github.com/repos/rails/rails/labels/railties",
        "name": "railties",
        "color": "8BE06E",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-06-03T13:57:19Z",
    "updated_at": "2019-06-03T13:57:22Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/36387",
      "html_url": "https://github.com/rails/rails/pull/36387",
      "diff_url": "https://github.com/rails/rails/pull/36387.diff",
      "patch_url": "https://github.com/rails/rails/pull/36387.patch"
    },
    "body": "This cuts down on a bit of memory being allocated in production and a little bit on boot speed."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36386",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36386/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36386/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36386/events",
    "html_url": "https://github.com/rails/rails/issues/36386",
    "id": 451490934,
    "node_id": "MDU6SXNzdWU0NTE0OTA5MzQ=",
    "number": 36386,
    "title": "Jobs fail because of TypeError in ActionText",
    "user": {
      "login": "a-ta-ta",
      "id": 27297581,
      "node_id": "MDQ6VXNlcjI3Mjk3NTgx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/27297581?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/a-ta-ta",
      "html_url": "https://github.com/a-ta-ta",
      "followers_url": "https://api.github.com/users/a-ta-ta/followers",
      "following_url": "https://api.github.com/users/a-ta-ta/following{/other_user}",
      "gists_url": "https://api.github.com/users/a-ta-ta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/a-ta-ta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/a-ta-ta/subscriptions",
      "organizations_url": "https://api.github.com/users/a-ta-ta/orgs",
      "repos_url": "https://api.github.com/users/a-ta-ta/repos",
      "events_url": "https://api.github.com/users/a-ta-ta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/a-ta-ta/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-06-03T13:42:12Z",
    "updated_at": "2019-06-03T13:42:12Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\nRun  AnalyzeJobs|PurgeJobs (from ActiveStorage, no custom changes) with Sidekiq (I guess other queue adaptors too).\r\n\r\n\r\n### Expected behavior\r\nNo errors\r\n\r\n### Actual behavior\r\n\r\nJobs fail with:\r\n\r\n ```\r\n2019-06-03T09:42:10.114Z 14485 TID-grs9i77p5 WARN: TypeError: wrong argument type Integer (expected VM/thread)\r\n2019-06-03T09:42:10.115Z 14485 TID-grs9i77p5 WARN: .../vendor/bundle/ruby/2.5.0/gems/actiontext-6.0.0.rc1/lib/action_text/engine.rb:39:in `block (2 levels) in <class:Engine>'\r\n.../vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0.rc1/lib/active_support/callbacks.rb:429:in `instance_exec'\r\n.../vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0.rc1/lib/active_support/callbacks.rb:429:in `block in make_lambda'\r\n.../vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0.rc1/lib/active_support/callbacks.rb:201:in `block (2 levels) in halting'\r\n.../vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0.rc1/lib/active_support/callbacks.rb:607:in `block (2 levels) in default_terminator'\r\n.../vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0.rc1/lib/active_support/callbacks.rb:606:in `catch'\r\n.../vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0.rc1/lib/active_support/callbacks.rb:606:in `block in default_terminator'\r\n.../vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0.rc1/lib/active_support/callbacks.rb:202:in `block in halting'\r\n.../vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0.rc1/lib/active_support/callbacks.rb:514:in `block in invoke_before'\r\n.../vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0.rc1/lib/active_support/callbacks.rb:514:in `each'\r\n.../vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0.rc1/lib/active_support/callbacks.rb:514:in `invoke_before'\r\n.../vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0.rc1/lib/active_support/callbacks.rb:134:in `run_callbacks'\r\n.../vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0.rc1/lib/active_support/execution_wrapper.rb:119:in `complete!'\r\n.../vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0.rc1/lib/active_support/execution_wrapper.rb:76:in `ensure in block in run!'\r\n.../vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0.rc1/lib/active_support/execution_wrapper.rb:76:in `block in run!'\r\n.../vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0.rc1/lib/active_support/execution_wrapper.rb:70:in `tap'\r\n.../vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0.rc1/lib/active_support/execution_wrapper.rb:70:in `run!'\r\n.../vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0.rc1/lib/active_support/execution_wrapper.rb:86:in `wrap'\r\n.../vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0.rc1/lib/active_support/reloader.rb:71:in `wrap'\r\n.../vendor/bundle/ruby/2.5.0/gems/sidekiq-5.2.7/lib/sidekiq/rails.rb:42:in `call'\r\n.../vendor/bundle/ruby/2.5.0/gems/sidekiq-5.2.7/lib/sidekiq/processor.rb:132:in `block (4 levels) in dispatch'\r\n.../vendor/bundle/ruby/2.5.0/gems/sidekiq-5.2.7/lib/sidekiq/processor.rb:250:in `stats'\r\n.../vendor/bundle/ruby/2.5.0/gems/sidekiq-5.2.7/lib/sidekiq/processor.rb:127:in `block (3 levels) in dispatch'\r\n.../vendor/bundle/ruby/2.5.0/gems/sidekiq-5.2.7/lib/sidekiq/job_logger.rb:8:in `call'\r\n.../vendor/bundle/ruby/2.5.0/gems/sidekiq-5.2.7/lib/sidekiq/processor.rb:126:in `block (2 levels) in dispatch'\r\n.../vendor/bundle/ruby/2.5.0/gems/sidekiq-5.2.7/lib/sidekiq/job_retry.rb:74:in `global'\r\n.../vendor/bundle/ruby/2.5.0/gems/sidekiq-5.2.7/lib/sidekiq/processor.rb:125:in `block in dispatch'\r\n.../vendor/bundle/ruby/2.5.0/gems/sidekiq-5.2.7/lib/sidekiq/logging.rb:48:in `with_context'\r\n.../vendor/bundle/ruby/2.5.0/gems/sidekiq-5.2.7/lib/sidekiq/logging.rb:42:in `with_job_hash_context'\r\n.../vendor/bundle/ruby/2.5.0/gems/sidekiq-5.2.7/lib/sidekiq/processor.rb:124:in `dispatch'\r\n.../vendor/bundle/ruby/2.5.0/gems/sidekiq-5.2.7/lib/sidekiq/processor.rb:163:in `process'\r\n.../vendor/bundle/ruby/2.5.0/gems/sidekiq-5.2.7/lib/sidekiq/processor.rb:83:in `process_one'\r\n.../vendor/bundle/ruby/2.5.0/gems/sidekiq-5.2.7/lib/sidekiq/processor.rb:71:in `run'\r\n.../vendor/bundle/ruby/2.5.0/gems/sidekiq-5.2.7/lib/sidekiq/util.rb:16:in `watchdog'\r\n.../vendor/bundle/ruby/2.5.0/gems/sidekiq-5.2.7/lib/sidekiq/util.rb:25:in `block in safe_thread'\r\n```\r\n\r\n\r\n### System configuration\r\nRails 6.0.0.rc1\r\n\r\n**Ruby version**:\r\nruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-linux]"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36385",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36385/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36385/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36385/events",
    "html_url": "https://github.com/rails/rails/pull/36385",
    "id": 451433081,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg0NTIzNzUx",
    "number": 36385,
    "title": "Allow primary key comment on create table statement",
    "user": {
      "login": "guigs",
      "id": 38416,
      "node_id": "MDQ6VXNlcjM4NDE2",
      "avatar_url": "https://avatars0.githubusercontent.com/u/38416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guigs",
      "html_url": "https://github.com/guigs",
      "followers_url": "https://api.github.com/users/guigs/followers",
      "following_url": "https://api.github.com/users/guigs/following{/other_user}",
      "gists_url": "https://api.github.com/users/guigs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guigs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guigs/subscriptions",
      "organizations_url": "https://api.github.com/users/guigs/orgs",
      "repos_url": "https://api.github.com/users/guigs/repos",
      "events_url": "https://api.github.com/users/guigs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guigs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-06-03T11:34:16Z",
    "updated_at": "2019-06-03T13:22:31Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/36385",
      "html_url": "https://github.com/rails/rails/pull/36385",
      "diff_url": "https://github.com/rails/rails/pull/36385.diff",
      "patch_url": "https://github.com/rails/rails/pull/36385.patch"
    },
    "body": "This PR adds support for primary key column comment with `primary_key_comment` option to `create_table`.\r\n\r\nBefore this schema dump/load was not able to keep a comment that was added to a primary key column.\r\n\r\nThis PR complements #36384."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36383",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36383/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36383/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36383/events",
    "html_url": "https://github.com/rails/rails/issues/36383",
    "id": 451348579,
    "node_id": "MDU6SXNzdWU0NTEzNDg1Nzk=",
    "number": 36383,
    "title": "Inconsistent behavior on db:prepare task",
    "user": {
      "login": "morgoth",
      "id": 10766,
      "node_id": "MDQ6VXNlcjEwNzY2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morgoth",
      "html_url": "https://github.com/morgoth",
      "followers_url": "https://api.github.com/users/morgoth/followers",
      "following_url": "https://api.github.com/users/morgoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/morgoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morgoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morgoth/subscriptions",
      "organizations_url": "https://api.github.com/users/morgoth/orgs",
      "repos_url": "https://api.github.com/users/morgoth/repos",
      "events_url": "https://api.github.com/users/morgoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morgoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-06-03T08:13:48Z",
    "updated_at": "2019-06-03T19:37:50Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "The `db:prepare` task works different for PG adapter than `SQLite3` one.\r\n\r\n`db:prepare` task introduced in https://github.com/rails/rails/pull/35768 in case of missing database is supposed to create it, load schema and seeds.\r\n\r\nThis is working fine on PostgreSQL database, however when using SQLite3 database, seeds are not loaded.\r\nThis is happening, because `db:migrate` does not raise `ActiveRecord::NoDatabaseError` which `db:prepare` relies on https://github.com/rails/rails/blob/eece0bf1087dc2cb59605a5a9beb88c6b935c194/activerecord/lib/active_record/railties/databases.rake#L272\r\n\r\nNot sure what the proper fix would be. Raising `ActiveRecord::NoDatabaseError` on SQLite3 would be backward incompatible change, so maybe we should add some internal method for existence check of db, that could be used instead of relying on raising error?\r\n/cc @robertomiranda \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36382",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36382/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36382/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36382/events",
    "html_url": "https://github.com/rails/rails/issues/36382",
    "id": 451333783,
    "node_id": "MDU6SXNzdWU0NTEzMzM3ODM=",
    "number": 36382,
    "title": "Multiple db connection issues",
    "user": {
      "login": "morgoth",
      "id": 10766,
      "node_id": "MDQ6VXNlcjEwNzY2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morgoth",
      "html_url": "https://github.com/morgoth",
      "followers_url": "https://api.github.com/users/morgoth/followers",
      "following_url": "https://api.github.com/users/morgoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/morgoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morgoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morgoth/subscriptions",
      "organizations_url": "https://api.github.com/users/morgoth/orgs",
      "repos_url": "https://api.github.com/users/morgoth/repos",
      "events_url": "https://api.github.com/users/morgoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morgoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "eileencodes",
      "id": 1080678,
      "node_id": "MDQ6VXNlcjEwODA2Nzg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1080678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eileencodes",
      "html_url": "https://github.com/eileencodes",
      "followers_url": "https://api.github.com/users/eileencodes/followers",
      "following_url": "https://api.github.com/users/eileencodes/following{/other_user}",
      "gists_url": "https://api.github.com/users/eileencodes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eileencodes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eileencodes/subscriptions",
      "organizations_url": "https://api.github.com/users/eileencodes/orgs",
      "repos_url": "https://api.github.com/users/eileencodes/repos",
      "events_url": "https://api.github.com/users/eileencodes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eileencodes/received_events",
      "type": "User",
      "site_admin": true
    },
    "assignees": [
      {
        "login": "eileencodes",
        "id": 1080678,
        "node_id": "MDQ6VXNlcjEwODA2Nzg=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/1080678?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eileencodes",
        "html_url": "https://github.com/eileencodes",
        "followers_url": "https://api.github.com/users/eileencodes/followers",
        "following_url": "https://api.github.com/users/eileencodes/following{/other_user}",
        "gists_url": "https://api.github.com/users/eileencodes/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/eileencodes/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eileencodes/subscriptions",
        "organizations_url": "https://api.github.com/users/eileencodes/orgs",
        "repos_url": "https://api.github.com/users/eileencodes/repos",
        "events_url": "https://api.github.com/users/eileencodes/events{/privacy}",
        "received_events_url": "https://api.github.com/users/eileencodes/received_events",
        "type": "User",
        "site_admin": true
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/rails/rails/milestones/63",
      "html_url": "https://github.com/rails/rails/milestone/63",
      "labels_url": "https://api.github.com/repos/rails/rails/milestones/63/labels",
      "id": 2828826,
      "node_id": "MDk6TWlsZXN0b25lMjgyODgyNg==",
      "number": 63,
      "title": "6.0.0",
      "description": "",
      "creator": {
        "login": "rafaelfranca",
        "id": 47848,
        "node_id": "MDQ6VXNlcjQ3ODQ4",
        "avatar_url": "https://avatars3.githubusercontent.com/u/47848?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 13,
      "closed_issues": 145,
      "state": "open",
      "created_at": "2017-10-10T22:08:21Z",
      "updated_at": "2019-06-04T14:46:18Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 0,
    "created_at": "2019-06-03T07:33:50Z",
    "updated_at": "2019-06-03T18:16:27Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "While integrating multiple databases feature (Rails 6.0.0.rc1) I found surprising behavior:\r\nGiven:\r\n```yaml\r\n# database.yml\r\ntest:\r\n  primary:\r\n    <<: *default\r\n    database: db/test.sqlite3\r\n  replica:\r\n    <<: *default\r\n    database: db/test.sqlite3\r\n    replica: true\r\n```\r\n```ruby\r\n# application_record.rb\r\nclass ApplicationRecord < ActiveRecord::Base\r\n￼  self.abstract_class = true\r\n￼  connects_to database: {writing: :primary, reading: :replica}\r\n￼end\r\n```\r\nand then creating some record `User.create!` and in the same transaction quering for it:\r\n```ruby\r\nApplicationRecord.connection.execute(\"select count(*) from users;\").first.values.first\r\n```\r\nthis works as expected, however \r\n```ruby\r\nActiveRecord::Base.connection.execute(\"select count(*) from users;\").first.values.first\r\n```\r\n does not, as it returns 0.\r\n\r\nI'm not sure if this is an issue in the Rails itself, as it might surprise developers or just not refreshed documentation after introducing multiple db support. If the other, should we now recommend to use `AppliationRecord.connection` and `ApplicationRecord.transaction` in all places?\r\nYou can see the commit reproducing issue here https://github.com/morgoth/ar_issue/commit/ff01fe3b54d92540ebe1e501d504218f23aed8d7\r\n\r\n@eileencodes let me know if I can help somehow.\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36381",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36381/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36381/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36381/events",
    "html_url": "https://github.com/rails/rails/issues/36381",
    "id": 451251844,
    "node_id": "MDU6SXNzdWU0NTEyNTE4NDQ=",
    "number": 36381,
    "title": "Rails 6 zeitwerk autoload problem with gem",
    "user": {
      "login": "ShakeJ",
      "id": 4054312,
      "node_id": "MDQ6VXNlcjQwNTQzMTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4054312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ShakeJ",
      "html_url": "https://github.com/ShakeJ",
      "followers_url": "https://api.github.com/users/ShakeJ/followers",
      "following_url": "https://api.github.com/users/ShakeJ/following{/other_user}",
      "gists_url": "https://api.github.com/users/ShakeJ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ShakeJ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ShakeJ/subscriptions",
      "organizations_url": "https://api.github.com/users/ShakeJ/orgs",
      "repos_url": "https://api.github.com/users/ShakeJ/repos",
      "events_url": "https://api.github.com/users/ShakeJ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ShakeJ/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-06-03T00:20:33Z",
    "updated_at": "2019-06-03T00:55:27Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\nI did ugrade rails 5.2 to 6.0. and zeitwerk autoload and use it. \r\nbut some case is failed related gem. \r\n(I know config.load_defaults 6.0 and config.autoloader = :classic, but I wanna use zeitwerk gem :) ) \r\n\r\n1. Gem is not support zeitwerk autoload. \r\n(maybe I think almost gem is not support zitwerk autoload now)\r\n\r\nMy application use knock gem. \r\nand run in terminal \r\n$ bin/rails zeitwerk:check\r\n\r\nlike this, \r\n\r\n![image](https://user-images.githubusercontent.com/4054312/58769003-da679980-85dd-11e9-9d65-0d5047fe262b.png)\r\n\r\n2. Override issue \r\n\r\nZeitwork load class when const is use. \r\nFollow this codes, \r\n\r\nUserTokenController.rb\r\n\r\n```\r\nclass UserTokenController < Knock::AuthTokenController\r\n  private\r\n\r\n  def auth_params\r\n    params.permit(:login, :password, :login_token)\r\n  end\r\nend\r\n```\r\n\r\nand run, \r\nI expect run auth_params in userTokenController method (not auth_params in Knock::AuthTokenController), \r\nbut this is failed.\r\n\r\n![스크린샷 2019-06-03 오전 9 09 49](https://user-images.githubusercontent.com/4054312/58769173-60381480-85df-11e9-8947-696da84cbc8d.png)\r\n\r\nSee the zeitwerk logs, autloader order is \r\n\r\nZeitwerk@rails.main: autoload set for UserTokenController, to be loaded from /user_token_controller.rb\r\n\r\nZeitwerk@rails.main: constant Knock::ApplicationController loaded from file /Users/ray/.rbenv/versions/2.6.0/lib/ruby/gems/2.6.0/gems/knock-2.1.1/app/controllers/knock/application_controller.rb\r\n\r\nZeitwerk@rails.main: constant Knock::AuthTokenController loaded from file /Users/ray/.rbenv/versions/2.6.0/lib/ruby/gems/2.6.0/gems/knock-2.1.1/app/controllers/knock/auth_token_controller.rb\r\n\r\nMaybe, authTokenController is last called, and method in userTokenController can't override. \r\n\r\nI think As a solution to the problem, all gem is load first time at once, and later application controllers load. (becuase gem is not changed in run time)\r\n\r\nHow about that? and if that correct, how to first load gem before load application controllers?\r\nThanks\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\nCall 'auth_params' in UserTokenController\r\n\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nCall 'auth_params' in Knock::AuthTokenController\r\n\r\n### System configuration\r\n**Rails version**: 6.0.0\r\n\r\n**Ruby version**: 2.6.0\r\n\r\nI creating a test project, and will share it when it is complete.\r\ncc @fxn "
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36380",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36380/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36380/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36380/events",
    "html_url": "https://github.com/rails/rails/pull/36380",
    "id": 451241322,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg0Mzc1NjY0",
    "number": 36380,
    "title": "Add a warning for enum elements with 'not_' prefix.",
    "user": {
      "login": "edudepetris",
      "id": 2192588,
      "node_id": "MDQ6VXNlcjIxOTI1ODg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2192588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/edudepetris",
      "html_url": "https://github.com/edudepetris",
      "followers_url": "https://api.github.com/users/edudepetris/followers",
      "following_url": "https://api.github.com/users/edudepetris/following{/other_user}",
      "gists_url": "https://api.github.com/users/edudepetris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/edudepetris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/edudepetris/subscriptions",
      "organizations_url": "https://api.github.com/users/edudepetris/orgs",
      "repos_url": "https://api.github.com/users/edudepetris/repos",
      "events_url": "https://api.github.com/users/edudepetris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/edudepetris/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-06-02T22:23:41Z",
    "updated_at": "2019-06-03T14:10:45Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/36380",
      "html_url": "https://github.com/rails/rails/pull/36380",
      "diff_url": "https://github.com/rails/rails/pull/36380.diff",
      "patch_url": "https://github.com/rails/rails/pull/36380.patch"
    },
    "body": "### Summary\r\nAddresses #36272\r\n\r\nI added a new warning when an user creates enum elements with **not_** prefix\r\n\r\nExample\r\n```rb\r\nclass Foo < ActiveRecord::Base\r\n  enum status: [:sent, :not_sent]\r\nend\r\n```\r\nThe enum element **not_sent** trigger the new warning\r\n\r\n### Other Information\r\nCHANGELOG updated.\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36377",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36377/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36377/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36377/events",
    "html_url": "https://github.com/rails/rails/pull/36377",
    "id": 451142007,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg0MzA5MTQ0",
    "number": 36377,
    "title": "Remove `spring-watcher-listen` from default Gemfile",
    "user": {
      "login": "y-yagi",
      "id": 987638,
      "node_id": "MDQ6VXNlcjk4NzYzOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/987638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/y-yagi",
      "html_url": "https://github.com/y-yagi",
      "followers_url": "https://api.github.com/users/y-yagi/followers",
      "following_url": "https://api.github.com/users/y-yagi/following{/other_user}",
      "gists_url": "https://api.github.com/users/y-yagi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/y-yagi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/y-yagi/subscriptions",
      "organizations_url": "https://api.github.com/users/y-yagi/orgs",
      "repos_url": "https://api.github.com/users/y-yagi/repos",
      "events_url": "https://api.github.com/users/y-yagi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/y-yagi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107195,
        "node_id": "MDU6TGFiZWwxMDcxOTU=",
        "url": "https://api.github.com/repos/rails/rails/labels/railties",
        "name": "railties",
        "color": "8BE06E",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2019-06-02T01:34:56Z",
    "updated_at": "2019-06-04T01:15:25Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/36377",
      "html_url": "https://github.com/rails/rails/pull/36377",
      "diff_url": "https://github.com/rails/rails/pull/36377.diff",
      "patch_url": "https://github.com/rails/rails/pull/36377.patch"
    },
    "body": "`spring-watcher-listen` watch application root by default.\r\nhttps://github.com/jonleighton/spring-watcher-listen/blob/c4bfe15805867e229588e4b776a7b87438137094/lib/spring/watcher/listen.rb#L58\r\n\r\nThis is necessary to watch the file (e.g. `.ruby-version`) in the application root.\r\n\r\nBy this `node_modules` also be watched, and it is a possibility to be\r\nshown a warning by `listen`.\r\nRelated to #32700, #34912, https://github.com/rails/webpacker/issues/1990.\r\n\r\n`listen` watches directory recursive by default, and it cannot avoid it.\r\nhttps://github.com/guard/listen/issues/111\r\nSo If this warning happens, the only workaround the user can do is remove the gem.\r\n\r\nThe issue is likely to occur more frequently in Rails 6 because `rails new` runs `webpacker:install` by default. Because of such a state, I think that we should not recommend to use `spring-watcher-listen`.\r\n\r\nSpring has polling watcher, restart process works without this\r\n`spring-watcher-listen`. Because of polling base, CPU load may be higher than listen base. Still I think that it is better than the warning comes out.\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36376",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36376/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36376/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36376/events",
    "html_url": "https://github.com/rails/rails/pull/36376",
    "id": 451127979,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg0MzAwMDMx",
    "number": 36376,
    "title": "Reword the ActionDispatch::Response#content_type change [ci skip]",
    "user": {
      "login": "sharang-d",
      "id": 1948197,
      "node_id": "MDQ6VXNlcjE5NDgxOTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1948197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sharang-d",
      "html_url": "https://github.com/sharang-d",
      "followers_url": "https://api.github.com/users/sharang-d/followers",
      "following_url": "https://api.github.com/users/sharang-d/following{/other_user}",
      "gists_url": "https://api.github.com/users/sharang-d/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sharang-d/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sharang-d/subscriptions",
      "organizations_url": "https://api.github.com/users/sharang-d/orgs",
      "repos_url": "https://api.github.com/users/sharang-d/repos",
      "events_url": "https://api.github.com/users/sharang-d/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sharang-d/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 150377,
        "node_id": "MDU6TGFiZWwxNTAzNzc=",
        "url": "https://api.github.com/repos/rails/rails/labels/docs",
        "name": "docs",
        "color": "02d7e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-06-01T21:49:03Z",
    "updated_at": "2019-06-01T21:49:06Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/36376",
      "html_url": "https://github.com/rails/rails/pull/36376",
      "diff_url": "https://github.com/rails/rails/pull/36376.diff",
      "patch_url": "https://github.com/rails/rails/pull/36376.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36374",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36374/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36374/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36374/events",
    "html_url": "https://github.com/rails/rails/issues/36374",
    "id": 450978335,
    "node_id": "MDU6SXNzdWU0NTA5NzgzMzU=",
    "number": 36374,
    "title": "Active Storage has_many_attached attachments get destroyed when subsequent files are attached",
    "user": {
      "login": "jasonswett",
      "id": 680813,
      "node_id": "MDQ6VXNlcjY4MDgxMw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/680813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasonswett",
      "html_url": "https://github.com/jasonswett",
      "followers_url": "https://api.github.com/users/jasonswett/followers",
      "following_url": "https://api.github.com/users/jasonswett/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasonswett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasonswett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasonswett/subscriptions",
      "organizations_url": "https://api.github.com/users/jasonswett/orgs",
      "repos_url": "https://api.github.com/users/jasonswett/repos",
      "events_url": "https://api.github.com/users/jasonswett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasonswett/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/rails/rails/milestones/63",
      "html_url": "https://github.com/rails/rails/milestone/63",
      "labels_url": "https://api.github.com/repos/rails/rails/milestones/63/labels",
      "id": 2828826,
      "node_id": "MDk6TWlsZXN0b25lMjgyODgyNg==",
      "number": 63,
      "title": "6.0.0",
      "description": "",
      "creator": {
        "login": "rafaelfranca",
        "id": 47848,
        "node_id": "MDQ6VXNlcjQ3ODQ4",
        "avatar_url": "https://avatars3.githubusercontent.com/u/47848?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 13,
      "closed_issues": 145,
      "state": "open",
      "created_at": "2017-10-10T22:08:21Z",
      "updated_at": "2019-06-04T14:46:18Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 7,
    "created_at": "2019-05-31T20:56:57Z",
    "updated_at": "2019-06-01T01:48:09Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\n1. Create a new Rails 6.0.0.rc1 application\r\n2. Generate a scaffold\r\n3. Run `rails db:create` and `rails db:migrate`\r\n4. Run `rails active_storage:install`\r\n5. Run `rails db:migrate` to create the Active Storage tables\r\n6. Add a `has_many_attached` to the scaffold's model\r\n7. Add `<%= form.file_field :files, multiple: true %>` to that scaffold's form\r\n8. Add `files: []` as an attribute to that scaffold's controller's strong params\r\n9. In the browser, create an instance of the scaffold that includes a file upload\r\n10. In the browser, edit that same instance and include a different file upload\r\n\r\n### Expected behavior\r\nThe original file upload should be preserved. At the end of the above steps, the model instance should have both the original file and the subsequently-uploaded file.\r\n\r\n### Actual behavior\r\nThe original upload gets blown away when the subsequent file is uploaded. All that's left is the newer file.\r\n\r\nNote: it could conceivably be argued that the current behavior is the way the feature ought to work. However, the current Rails 6.0.0.rc1 behavior differs from the behavior I've observed in Rails 5.2.2.1. It seems to me that the new behavior constitutes a bug because it differs from the previous behavior.\r\n\r\n### System configuration\r\n**Rails version**: 6.0.0.rc1\r\n\r\n**Ruby version**: 2.5.3\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36372",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36372/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36372/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36372/events",
    "html_url": "https://github.com/rails/rails/pull/36372",
    "id": 450958674,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg0MTc0ODky",
    "number": 36372,
    "title": "Don't break configurations.each, .first before the deprecation period",
    "user": {
      "login": "jmarianer",
      "id": 20607141,
      "node_id": "MDQ6VXNlcjIwNjA3MTQx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/20607141?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmarianer",
      "html_url": "https://github.com/jmarianer",
      "followers_url": "https://api.github.com/users/jmarianer/followers",
      "following_url": "https://api.github.com/users/jmarianer/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmarianer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmarianer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmarianer/subscriptions",
      "organizations_url": "https://api.github.com/users/jmarianer/orgs",
      "repos_url": "https://api.github.com/users/jmarianer/repos",
      "events_url": "https://api.github.com/users/jmarianer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmarianer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-05-31T19:58:20Z",
    "updated_at": "2019-05-31T19:58:23Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/36372",
      "html_url": "https://github.com/rails/rails/pull/36372",
      "diff_url": "https://github.com/rails/rails/pull/36372.diff",
      "patch_url": "https://github.com/rails/rails/pull/36372.patch"
    },
    "body": "### Summary\r\n\r\nI was working on a library (switchman) that uses configuration.each and realized that it was broken (despite being listed as just deprecated) relative to Rails 5. I whipped up this change to fix it but I'm not sure if this is desired at this point in the release cycle. This is a first draft meant mostly as a chance for the maintainers to say \"we're too frozen for this right now\"; let me know if that isn't the case and you would like me to add tests or change anything."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36371",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36371/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36371/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36371/events",
    "html_url": "https://github.com/rails/rails/pull/36371",
    "id": 450947594,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg0MTY2MDMx",
    "number": 36371,
    "title": "WIP: Move schema cache to pool",
    "user": {
      "login": "eileencodes",
      "id": 1080678,
      "node_id": "MDQ6VXNlcjEwODA2Nzg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1080678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eileencodes",
      "html_url": "https://github.com/eileencodes",
      "followers_url": "https://api.github.com/users/eileencodes/followers",
      "following_url": "https://api.github.com/users/eileencodes/following{/other_user}",
      "gists_url": "https://api.github.com/users/eileencodes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eileencodes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eileencodes/subscriptions",
      "organizations_url": "https://api.github.com/users/eileencodes/orgs",
      "repos_url": "https://api.github.com/users/eileencodes/repos",
      "events_url": "https://api.github.com/users/eileencodes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eileencodes/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/rails/rails/milestones/63",
      "html_url": "https://github.com/rails/rails/milestone/63",
      "labels_url": "https://api.github.com/repos/rails/rails/milestones/63/labels",
      "id": 2828826,
      "node_id": "MDk6TWlsZXN0b25lMjgyODgyNg==",
      "number": 63,
      "title": "6.0.0",
      "description": "",
      "creator": {
        "login": "rafaelfranca",
        "id": 47848,
        "node_id": "MDQ6VXNlcjQ3ODQ4",
        "avatar_url": "https://avatars3.githubusercontent.com/u/47848?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 13,
      "closed_issues": 145,
      "state": "open",
      "created_at": "2017-10-10T22:08:21Z",
      "updated_at": "2019-06-04T14:46:18Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 0,
    "created_at": "2019-05-31T19:25:16Z",
    "updated_at": "2019-05-31T19:32:26Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/36371",
      "html_url": "https://github.com/rails/rails/pull/36371",
      "diff_url": "https://github.com/rails/rails/pull/36371.diff",
      "patch_url": "https://github.com/rails/rails/pull/36371.patch"
    },
    "body": "This PR proposes moving the schema cache from the connection to the pool\r\nso the connection can ask the pool for the cache. The end goal, if this\r\nPR is acceptable, is to have the pool read the cache from the yaml file\r\nso that we can get rid of the `active_record.check_schema_cache_dump`\r\ninitializer.\r\n\r\nWhy do we want to get rid of the initializer you ask?\r\n\r\nWell I was looking at #34449 and trying to make it work for our usecase\r\nand it revealed A LOT of problems. There are a few issues that I will\r\nfix in remaining PRs with SchemaMigration, but there's a big glaring\r\nissue with this initializer.\r\n\r\nWhen you have an application with multiple databases we'll need to loop\r\nthrough all the configurations and set the schema cache on those\r\nconnections. The problem is on initialization we only have one\r\nconnection - the one for Ar::Base. This is fine in a single db\r\napplication but not fine in multi-db. If we follow the pattern in #34449\r\nand establish a connection to those other dbs we will end up setting the\r\ncache on the _connection object_ rather than on all connections that\r\nconnect for that config.\r\n\r\nSo even though we looped through the configs and assigned the cache the\r\ncache will not be set (or will be set wrong) once the app is booted.\r\nAfter trying many different ways to set the schema cache `@tenderlove`\r\nand I came to the conclusion that the initializer is problematic, as is\r\nsetting the schema cache twice.\r\n\r\nThis is part 1 to move the cache to the pool so the cache can read from\r\nthe schema cache yaml file instead of setting it when initializing the\r\napp.\r\n\r\ncc/ @jhawthorn @rafaelfranca @matthewd - @tenderlove and I would like your thoughts on this before proceeding and cleaning it up. The schema cache is kind of busted in Rails 6 for multi-db 😢 "
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36370",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36370/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36370/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36370/events",
    "html_url": "https://github.com/rails/rails/pull/36370",
    "id": 450817692,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg0MDYyNDA5",
    "number": 36370,
    "title": "Add support for Proc based parameter filtering on arrays of values",
    "user": {
      "login": "ptoomey3",
      "id": 103360,
      "node_id": "MDQ6VXNlcjEwMzM2MA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/103360?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptoomey3",
      "html_url": "https://github.com/ptoomey3",
      "followers_url": "https://api.github.com/users/ptoomey3/followers",
      "following_url": "https://api.github.com/users/ptoomey3/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptoomey3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptoomey3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptoomey3/subscriptions",
      "organizations_url": "https://api.github.com/users/ptoomey3/orgs",
      "repos_url": "https://api.github.com/users/ptoomey3/repos",
      "events_url": "https://api.github.com/users/ptoomey3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptoomey3/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [
      {
        "id": 107194,
        "node_id": "MDU6TGFiZWwxMDcxOTQ=",
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-05-31T14:08:55Z",
    "updated_at": "2019-05-31T14:19:39Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/36370",
      "html_url": "https://github.com/rails/rails/pull/36370",
      "diff_url": "https://github.com/rails/rails/pull/36370.diff",
      "patch_url": "https://github.com/rails/rails/pull/36370.patch"
    },
    "body": "### Summary\r\n\r\nWe recently implemented an allow-list based approach to parameter filtering to minimize the risk of logging sensitive data. The way we implement this is to use the `Proc` based filtering built-in to Rails. We do something like this;\r\n\r\n``` ruby\r\ndef filtered_params_proc\r\n  lambda do |key, value|\r\n    unless key =~ WHITELISTED_PARAMETERS\r\n      value.replace(SANITIZED_VALUE) if value.respond_to?(:replace)\r\n    end\r\n  end\r\nend\r\n\r\nconfig.filter_parameters << filtered_params_proc\r\n```\r\n\r\nThis seemed to be working, but we noticed that it wasn't sanitizing parameters of arrays of values. For example, for a request like this:\r\n\r\n```\r\nhttps://github.com/user/repo/unchanged_files_with_annotations?blob_paths[]=value1&blob_paths[]=value2&blob_paths[]=value3&pull_number=4&sha=some-sha\r\n```\r\n\r\nthe log entry for the URL looks like this:\r\n\r\n```\r\nhttps://github.com/user/repo/unchanged_files_with_annotations?blob_paths[]=value1&blob_paths[]=value2&blob_paths[]=value3&pull_number=[FILTERED]&sha=[FILTERED]\r\n```\r\n\r\nThis was not expected. Digging into the parameter filtering logic, we saw that, based on the way parameters are currently processed, a parameter value of type `Hash` is recursively processed. For a value of type `Array` however, the current behavior is to simply return the original array, with no filtering. It is not clear what the expected behavior should be. But, doing nothing seems incorrect, since it bypasses custom `Proc` based parameter filtering all together for arrays of values. This change introduces one possible option for how this should work. \r\n\r\nThe main caveat/question I have is if the approach is \"dishonest\" in so far as all of the other logic assumes that each thing being processed has a one-to-one key -> value mapping. But, in the case of an array, one key maps to multiple values. So, it isn't clear if it is dishonest to process each element, passing in the same key for each. The changes in this PR seemed like the most unsurprising approach for handling Arrays, but am definitely open to alternative suggestions :smile: \r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36367",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36367/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36367/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36367/events",
    "html_url": "https://github.com/rails/rails/pull/36367",
    "id": 450513770,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjgzODE5MTg0",
    "number": 36367,
    "title": "Schema Dumper raises an exception when it fails",
    "user": {
      "login": "itsWill",
      "id": 6386302,
      "node_id": "MDQ6VXNlcjYzODYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6386302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/itsWill",
      "html_url": "https://github.com/itsWill",
      "followers_url": "https://api.github.com/users/itsWill/followers",
      "following_url": "https://api.github.com/users/itsWill/following{/other_user}",
      "gists_url": "https://api.github.com/users/itsWill/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/itsWill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/itsWill/subscriptions",
      "organizations_url": "https://api.github.com/users/itsWill/orgs",
      "repos_url": "https://api.github.com/users/itsWill/repos",
      "events_url": "https://api.github.com/users/itsWill/events{/privacy}",
      "received_events_url": "https://api.github.com/users/itsWill/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-05-30T21:25:41Z",
    "updated_at": "2019-06-03T20:11:21Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/36367",
      "html_url": "https://github.com/rails/rails/pull/36367",
      "diff_url": "https://github.com/rails/rails/pull/36367.diff",
      "patch_url": "https://github.com/rails/rails/pull/36367.patch"
    },
    "body": "### Summary\r\n\r\nPrevioulsy the schema dumper when it encountered a failure it would\r\nrescue the exception and leave a comment on the schema.rb. Now we raise\r\nan exception and let the developer be aware that the schema was not\r\ndumped successfully.\r\n\r\nThis behaviour was added in 87535f5 to handle unknown column types. \r\nThis is problematic because it fails silently, and someone wouldn't know \r\nuntil they ran a command like `db:test:prepare` or `db:schema:load` until\r\nmuch much later.\r\n\r\nWe now let exceptions bubble up and display a helpful message for the \r\nunknown column types. \r\n\r\nFixes: #36359\r\n\r\ncc: @searls, @rafaelfranca \r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36364",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36364/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36364/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36364/events",
    "html_url": "https://github.com/rails/rails/pull/36364",
    "id": 450379577,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjgzNzExNTYz",
    "number": 36364,
    "title": "Include missing javascript tag for rails plugin",
    "user": {
      "login": "abhaynikam",
      "id": 7736232,
      "node_id": "MDQ6VXNlcjc3MzYyMzI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7736232?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abhaynikam",
      "html_url": "https://github.com/abhaynikam",
      "followers_url": "https://api.github.com/users/abhaynikam/followers",
      "following_url": "https://api.github.com/users/abhaynikam/following{/other_user}",
      "gists_url": "https://api.github.com/users/abhaynikam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abhaynikam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abhaynikam/subscriptions",
      "organizations_url": "https://api.github.com/users/abhaynikam/orgs",
      "repos_url": "https://api.github.com/users/abhaynikam/repos",
      "events_url": "https://api.github.com/users/abhaynikam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abhaynikam/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107195,
        "node_id": "MDU6TGFiZWwxMDcxOTU=",
        "url": "https://api.github.com/repos/rails/rails/labels/railties",
        "name": "railties",
        "color": "8BE06E",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-05-30T15:58:56Z",
    "updated_at": "2019-05-31T04:43:05Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/36364",
      "html_url": "https://github.com/rails/rails/pull/36364",
      "diff_url": "https://github.com/rails/rails/pull/36364.diff",
      "patch_url": "https://github.com/rails/rails/pull/36364.patch"
    },
    "body": "When a new Rails plugin is created, it excluding add `javascript_include_tag` in the plugin layout and was not linking directories in the plugin manifest. \r\n\r\n```\r\nrails plugin new myenginename --mountable\r\n```\r\n\r\nThis was removed in this https://github.com/rails/rails/pull/33079/commits/ea3972c50d2fccda0c4392fe78d128633204f72d commit. \r\n\r\nThis PR adds `javascript_include_tag` in the layout file and `//= link_directory ../javascripts/myenginename .js` in myenginename_manifest.js file.\r\n\r\nFixes: #36332 \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36363",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36363/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36363/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36363/events",
    "html_url": "https://github.com/rails/rails/issues/36363",
    "id": 450082472,
    "node_id": "MDU6SXNzdWU0NTAwODI0NzI=",
    "number": 36363,
    "title": "Unexpected deprecation warning in Rails 6:  'Initialization autoloaded the constant Example'",
    "user": {
      "login": "ansonhoyt",
      "id": 543751,
      "node_id": "MDQ6VXNlcjU0Mzc1MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/543751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ansonhoyt",
      "html_url": "https://github.com/ansonhoyt",
      "followers_url": "https://api.github.com/users/ansonhoyt/followers",
      "following_url": "https://api.github.com/users/ansonhoyt/following{/other_user}",
      "gists_url": "https://api.github.com/users/ansonhoyt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ansonhoyt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ansonhoyt/subscriptions",
      "organizations_url": "https://api.github.com/users/ansonhoyt/orgs",
      "repos_url": "https://api.github.com/users/ansonhoyt/repos",
      "events_url": "https://api.github.com/users/ansonhoyt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ansonhoyt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2019-05-30T01:03:37Z",
    "updated_at": "2019-06-03T21:32:21Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\n\r\n1. Create a new app with Rails 6.0.0.rc1 (or tip of `6-0-stable` branch)\r\n2. The app initializes fine. Confirm with `rails test`.\r\n3. Define a simple ActiveModel::Type\r\n```\r\n# app/types/example.rb\r\nclass Example < ActiveModel::Type::String\r\nend\r\n\r\n# config/initializers/types.rb\r\nActiveRecord::Type.register(:example, Example)\r\n```\r\n4. Now the app initializes with deprecation warnings. Confirm with `rails test`.\r\n\r\n### Expected behavior\r\nNo Rails deprecation warnings. This is a bare app, using a simple Rails feature as documented.\r\n\r\n### Actual behavior\r\n```\r\n$ rails test\r\nDEPRECATION WARNING: Initialization autoloaded the constant Example.\r\n\r\nBeing able to do this is deprecated. Autoloading during initialization is going\r\nto be an error condition in future versions of Rails.\r\n\r\nReloading does not reboot the application, and therefore code executed during\r\ninitialization does not run again. So, if you reload Example, for example,\r\nthe expected changes won't be reflected in that stale Class object.\r\n\r\nThis autoloaded constant has been unloaded.\r\n\r\nPlease, check the \"Autoloading and Reloading Constants\" guide for solutions.\r\n (called from <top (required)> at /Users/ahoyt/code/tiu/testApp/config/environment.rb:5)\r\n\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 6.0.0.rc1 (or with tip of `6-0-stable` branch)\r\n\r\n**Ruby version**: 2.5.5\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36362",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36362/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36362/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36362/events",
    "html_url": "https://github.com/rails/rails/pull/36362",
    "id": 449932596,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjgzMzYxNTMx",
    "number": 36362,
    "title": "Prevent double save of inverse associations in autosave",
    "user": {
      "login": "p8",
      "id": 28561,
      "node_id": "MDQ6VXNlcjI4NTYx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/28561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/p8",
      "html_url": "https://github.com/p8",
      "followers_url": "https://api.github.com/users/p8/followers",
      "following_url": "https://api.github.com/users/p8/following{/other_user}",
      "gists_url": "https://api.github.com/users/p8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/p8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/p8/subscriptions",
      "organizations_url": "https://api.github.com/users/p8/orgs",
      "repos_url": "https://api.github.com/users/p8/repos",
      "events_url": "https://api.github.com/users/p8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/p8/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-05-29T17:30:13Z",
    "updated_at": "2019-05-30T07:48:21Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/36362",
      "html_url": "https://github.com/rails/rails/pull/36362",
      "diff_url": "https://github.com/rails/rails/pull/36362.diff",
      "patch_url": "https://github.com/rails/rails/pull/36362.patch"
    },
    "body": "### Summary\r\n\r\nAutosave would double save the child of a parent association with\r\ninverse set if saving the child first. The second save of the child\r\nwould clear the mutation tracker resulting in an incorrect dirty state.\r\n\r\n```\r\n    # pirate has_one ship\r\n    ship = Ship.new(name: \"Nights Dirty Lightning\")\r\n    pirate = ship.build_pirate(catchphrase: \"Aye\")\r\n    ship.save!\r\n    ship.previous_changes # => returns {} but this should contain the changes.\r\n```\r\n\r\nThis commit adds a `@saving` state which tracks if a record is currently being saved.\r\nIf `@saving` is set to true, the record won't be saved by the autosave callbacks.\r\n\r\nWhen saving ship currently the following happens:\r\n1. the `before_save` callbacks of the **ship** are called\r\n2. the callbacks call `autosave_associated_records_for_pirate`\r\n3. `autosave_associated_records_for_pirate` saves the **pirate**\r\n4. the `after_save` callbacks of the **pirate** are called\r\n5. the callbacks call `autosave_associated_records_for_ship`\r\n6. `autosave_associated_records_for_ship` saves the **ship**\r\n7. the **ship** is saved again by the original save\r\n\r\n`autosave_associated_records_for_ship` saves the ship because the ship\r\nassociation is set by inverse_of in a `has_one` on the pirate. This does\r\nnot happen with a `has_many` by default because the inverse is not set.\r\nIf setting the inverse on the `has_many` the problem occurs as well.\r\n\r\nWith this commit the following happens when saving a ship:\r\n1. `@saving` is set to true on **ship**\r\n2. the `before_save` callbacks of the **ship** are called\r\n3. the callbacks call `autosave_associated_records_for_pirate`\r\n5. `autosave_associated_records_for_pirate` saves the **pirate**\r\n6. the `after_save` callbacks of the **pirate** are called\r\n6. `autosave_associated_records_for_ship` skips saving the **ship**\r\n8. the **ship** is saved.\r\n9. `@saving` is set to false on \\ship\r\n\r\n### Other Information\r\n\r\nFixes #35597\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/36359",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/36359/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/36359/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/36359/events",
    "html_url": "https://github.com/rails/rails/issues/36359",
    "id": 449846331,
    "node_id": "MDU6SXNzdWU0NDk4NDYzMzE=",
    "number": 36359,
    "title": "Using unsupported database features leads to incomplete schema.rb files without error or warning",
    "user": {
      "login": "searls",
      "id": 79303,
      "node_id": "MDQ6VXNlcjc5MzAz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/79303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/searls",
      "html_url": "https://github.com/searls",
      "followers_url": "https://api.github.com/users/searls/followers",
      "following_url": "https://api.github.com/users/searls/following{/other_user}",
      "gists_url": "https://api.github.com/users/searls/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/searls/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/searls/subscriptions",
      "organizations_url": "https://api.github.com/users/searls/orgs",
      "repos_url": "https://api.github.com/users/searls/repos",
      "events_url": "https://api.github.com/users/searls/events{/privacy}",
      "received_events_url": "https://api.github.com/users/searls/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-05-29T14:34:46Z",
    "updated_at": "2019-05-30T20:03:40Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Steps to reproduce\r\n\r\nWhen running migrations and using the default schema.rb dump strategy, if a table cannot be dumped, migrations will not raise an error or log a warning, but rather leave a comment.\r\n\r\nFor example, given this migration:\r\n\r\n```ruby\r\nclass AddTableWithEnum < ActiveRecord::Migration[5.2]\r\n  def change\r\n    execute \"create type conditions as enum ('sunny', 'rainy')\"\r\n\r\n    create_table :afternoons do |t|\r\n      t.column :weather, :conditions, null: false, default: \"sunny\"\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nRunning migrations will result in this `schema.rb` file:\r\n\r\n```ruby\r\nActiveRecord::Schema.define(version: 2019_05_29_142121) do\r\n\r\n  # These are extensions that must be enabled in order to support this database\r\n  enable_extension \"plpgsql\"\r\n\r\n# Could not dump table \"afternoons\" because of following StandardError\r\n#   Unknown type 'conditions' for column 'weather'\r\n\r\nend\r\n```\r\n\r\nHere's a repro-repo demonstrating the issue: https://github.com/searls/rails-repro-schema-squelch\r\n\r\nHere's the specific [commit](https://github.com/searls/rails-repro-schema-squelch/commit/cc010989cd0e360caa12a748db6c1ba5a4a421e4) of interest.\r\n\r\n### Expected behavior\r\n\r\nI expected Rails to raise an error in this case, and prompt the user to set `config.active_record.schema_format = :sql`, explaining that they need to switch to `structure.sql` to have a reproducible schema dump.\r\n\r\nAs it stands, the only moment someone will discover their dump is incomplete is _later_—potentially much later—when running something like `rake db:test:prepare` or `rake db:schema:load` on a new environment that depends on the schema being complete. Worse, the error they see (from a table not existing) may take users a while to trace back to an incomplete schema, since (in my experience) relatively few Rails developers have a firm understanding of when and how `db/schema.rb` is used by Rails.\r\n\r\n### Actual behavior\r\n\r\nAs described above, the actual behavior is:\r\n\r\n```\r\n$ bin/rake db:migrate\r\n== 20190529142121 AddTableWithEnum: migrating =================================\r\n-- execute(\"create type conditions as enum ('sunny', 'rainy')\")\r\n   -> 0.0040s\r\n-- create_table(:afternoons)\r\n   -> 0.0102s\r\n== 20190529142121 AddTableWithEnum: migrated (0.0143s) ========================\r\n\r\n$ echo $?\r\n0\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 5.2.3\r\n\r\n**Ruby version**: ruby 2.6.1p33 (2019-01-30 revision 66950) [x86_64-darwin18]\r\n"
  }
]
